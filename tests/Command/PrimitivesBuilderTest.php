<?php
/**
 * Created by PhpStorm.
 * User: mgarber
 * Date: 3/2/18
 * Time: 4:57 PM
 */

namespace Tests\Command;

use App\Command\ModelPrimitives;
use Doctrine\Common\DataFixtures\Purger\ORMPurger;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Tester\CommandTester;
use Symfony\Component\Dotenv\Dotenv;

class PrimitivesBuilderTest extends KernelTestCase
{
    /**
     * @var EntityManagerInterface
     */
    private static $entityManagerModels;

    /** @var EntityManagerInterface */
    private static $entityManagerConfiguration;

    protected static $kernel;

    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
        // TODO: Remove next line when environment variables are set up make conditional for production
        (new Dotenv())->load(__DIR__.'/../../.env');
        // TODO: Change dev->prod, false for production
        self::$kernel = self::bootKernel();
        self::$entityManagerModels = self::$kernel->getContainer()->get('doctrine.orm.models_entity_manager');
        self::$entityManagerConfiguration = self::$kernel->getContainer()->get('doctrine.orm.configuration_entity_manager');
    }


    /**
     * @throws \Doctrine\DBAL\DBALException
     */
    public function setUp()
    {
        /** @var /App/Repository/Models/DomainRepository $domainRepository */
        /** @var /App/Repository/Models/ValueRepository $valueRepository   */
        /** @var /App/Repository/Models/TagRepository $tagRepository       */
        /** @var /App/Repository/Configuration/MiscellaneousRepository $miscellaneousRepository */
        $purgerModels=new ORMPurger(self::$entityManagerModels);
        $purgerConfiguration = new ORMPurger(self::$entityManagerConfiguration);
        $purgerModels->setPurgeMode(ORMPurger::PURGE_MODE_TRUNCATE);
        $purgerConfiguration->setPurgeMode(ORMPurger::PURGE_MODE_TRUNCATE);
        /** @var /Doctrine/DBAL/Connection $connectionModel */
        $connectionModel=$purgerModels->getObjectManager()->getConnection();
        /** @var /Doctrine/DBAL/Connection $connectionConfiguration */
        $connectionConfiguration=$purgerConfiguration->getObjectManager()->getConnection();
        $connectionModel->query( 'SET FOREIGN_KEY_CHECKS=0' );
        $connectionConfiguration->query('SET FOREIGN_KEY_CHECKS=0');
        $purgerModels->purge();
        $purgerConfiguration->purge();
        $connectionModel->query('SET FOREIGN_KEY_CHECKS=1');
        $connectionConfiguration->query('SET FOREIGN_KEY_CHECKS=1');
    }


    private function loadCommandTestSource(Command $command, string $testSource)
    {
        $application = new Application('Command Test');
        $application->add($command);
        $commandTester = new CommandTester($command);
        $commandTester->execute([
            'command'=>$command->getName(),
            'filename'=>__DIR__."/../Source/$testSource"
        ]);
        $output=$commandTester->getDisplay();
        return $output;
    }


    public function testCommandLoadModelPrimitivesCorrect()
    {
        $output=$this->loadCommandTestSource(new ModelPrimitives, 'primitives-correct.yml');
        $this->assertContains('Commencing at', $output);
        $this->assertContains('100%', $output);
        $this->assertContains('Duration',$output);
    }

    public function testCommandLoadModelPrimitivesError()
    {
        $output=$this->loadCommandTestSource(new ModelPrimitives(), 'primitives-1006-previous-value.yml');
        $this->assertContains("\"American Rhythm\" at row:46 col:18.  Previously defined at row:5 col:18.", $output);
    }
}