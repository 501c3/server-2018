<?php

namespace App\Repository\Sales;

use App\Entity\Sales\Channel;
use App\Entity\Sales\Tag;
use App\Entity\Sales\Workarea;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;


/**
 * WorkareaRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class WorkareaRepository extends ServiceEntityRepository
{
    /**
     * WorkareaRepository constructor.
     * @param ManagerRegistry $registry
     */
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct( $registry, Workarea::class );
    }

    /**
     * @param int $length
     * @return bool|string
     */

    function generateRandomString($length = 3) {
        return substr(str_shuffle(str_repeat($x='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', ceil($length/strlen($x)) )),1,$length);
    }

    /**
     * @param Channel $channel
     * @param Tag $tag
     * @param string|null $token
     * @return Workarea|null|object
     * @throws \Doctrine\ORM\ORMException
     * @throws \Doctrine\ORM\OptimisticLockException
     * @throws \Exception
     */
    public function fetch(Channel $channel, Tag $tag,string  $token=null):Workarea {
        if($token) {
            $workarea = $this->findOneBy(['token'=>$token,
                                          'channel'=>$channel]);
            if($workarea) {
                return $workarea;
            } else {
                throw new \Exception("Workarea does not exist for token submitted.",9000);
            }
        }
        $workarea = new Workarea();
        $workarea->setTag($tag)
                ->setChannel($channel)
                ->setToken($this->generateRandomString())
                ->setCreatedAt(new \DateTime('now'));
        $em=$this->getEntityManager();
        $em->persist($workarea);
        $em->flush($workarea);
        return $workarea;
    }

    public function getEntityManager()
    {
        return parent::getEntityManager(); // TODO: Change the autogenerated stub
    }
}
